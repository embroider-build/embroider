name: CI

on:
  schedule:
    - cron: '0 7 * * *' # daily, 7am

  push:
    branches:
      - main
      - 'v*' # prior release branches (e.g. `v0.30.x` branch)
    tags:
      - 'v*'
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  preflight:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: lint
        run: pnpm lint
      - id: set-matrix
        working-directory: test-packages/support
        run: echo "::set-output name=matrix::$(node ./suite-setup-util.js --matrix)"

  test:
    needs: ['preflight']
    name: ${{ matrix.name }}
    runs-on: '${{ matrix.os }}-latest'
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.preflight.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
        env:
          ACTIONS_STEP_DEBUG: true
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: suite
        run: ${{ matrix.command }}
        working-directory: ${{ matrix.dir }}
