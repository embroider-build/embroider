name: CI

on:
  schedule:
    - cron:  '0 7 * * *' # daily, 7am

  push:
    branches:
      - master
      - 'v*' # prior release branches (e.g. `v0.30.x` branch)
    tags:
      - 'v*'
  pull_request:
    branches: [master]

jobs:
  linting:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**'
          key: ${{ runner.os }}-yarn-v2-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v2
      - name: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: lint
        run: yarn lint

  discover_matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**'
          key: ${{ runner.os }}-yarn-v2-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v2
      - name: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - id: set-matrix
        run: echo "::set-output name=matrix::$(node ./test-packages/support/suite-setup-util.js --matrix)"

  test:
    needs: ["discover_matrix", "linting"]
    name: ${{ matrix.name }}
    runs-on: '${{ matrix.os }}-latest'
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.discover_matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - uses: actions/cache@v2
        if: runner.os != 'Windows'
        id: yarn-cache
        with:
          path: '**'
          key: ${{ runner.os }}-yarn-v2-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v2
      - name: Get yarn cache directory path
        if: runner.os == 'Windows'
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        if: runner.os == 'Windows'
        id: yarn-cache-windows
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-windows
          restore-keys: |
            yarn-cache-windows
      - name: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: suite
        run: ${{ matrix.command }}
        working-directory: ${{ matrix.dir }}
