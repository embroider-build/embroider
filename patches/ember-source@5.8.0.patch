diff --git a/dist/packages/@ember/debug/index.js b/dist/packages/@ember/debug/index.js
index 27eb2872d475cbff7f80d24c7404627d072bada9..123147f265134c50e32e381b0f976a7f93697485 100644
--- a/dist/packages/@ember/debug/index.js
+++ b/dist/packages/@ember/debug/index.js
@@ -1,6 +1,6 @@
 import { isChrome, isFirefox } from '@ember/-internals/browser-environment';
 import { DEBUG } from '@glimmer/env';
-import _deprecate from './lib/deprecate';
+import defaultDeprecate from './lib/deprecate';
 import { isTesting } from './lib/testing';
 import _warn from './lib/warn';
 export { registerHandler as registerWarnHandler } from './lib/warn';
@@ -12,11 +12,11 @@ export { default as captureRenderTree } from './lib/capture-render-tree';
 const noop = () => {};
 // SAFETY: these casts are just straight-up lies, but the point is that they do
 // not do anything in production builds.
 let assert = noop;
 let info = noop;
 let warn = noop;
 let debug = noop;
-let deprecate = noop;
+let currentDeprecate;
 let debugSeal = noop;
 let debugFreeze = noop;
 let runInDebug = noop;
@@ -25,6 +25,12 @@ let getDebugFunction = noop;
 let deprecateFunc = function () {
   return arguments[arguments.length - 1];
 };
+
+function deprecate(...args) {
+  return (currentDeprecate ?? defaultDeprecate)(...args)
+}
+
+
 if (DEBUG) {
   setDebugFunction = function (type, callback) {
     switch (type) {
@@ -37,7 +43,7 @@ if (DEBUG) {
       case 'debug':
         return debug = callback;
       case 'deprecate':
-        return deprecate = callback;
+        return currentDeprecate = callback;
       case 'debugSeal':
         return debugSeal = callback;
       case 'debugFreeze':
@@ -190,7 +189,6 @@ if (DEBUG) {
       Object.freeze(obj);
     }
   });
-  setDebugFunction('deprecate', _deprecate);
   setDebugFunction('warn', _warn);
 }
 let _warnIfUsingStrippedFeatureFlags;
